name: Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - lib/**
      - src/**
      - test/**
      - state-machine.asl.yml
      - template.yml

concurrency:
  group: ${{ github.workflow }}

jobs:
  build-ftp-docker:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        account-id:
          - "561178107736"
        region:
          - us-east-1
          - us-west-2
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ matrix.region }}
          role-to-assume: arn:aws:iam::${{ matrix.account-id }}:role/DevOps-GitHubOidcFederatedRole
          role-session-name: GitHub_Workflow-Deploy_Porter
      - run: aws ecr get-login-password --region ${{ matrix.region }} | docker login --username AWS --password-stdin ${{ matrix.account-id }}.dkr.ecr.${{ matrix.region }}.amazonaws.com
      - run: |
          sha1=`find src/containers/ftp -type f -print0 | sort -z | xargs -0 sha1sum | sha1sum | awk '{ print $1 }'`
          unsafe_ecr_repo_name="${{ github.repository }}-ftp"
          safe_ecr_repo_name=$(echo "$unsafe_ecr_repo_name" | tr '[:upper:]' '[:lower:]')
          image_name="${{ matrix.account-id }}.dkr.ecr.${{ matrix.region }}.amazonaws.com/$safe_ecr_repo_name:$sha1"
          lookup=`aws ecr describe-images --repository-name "$safe_ecr_repo_name" --image-ids imageTag="$sha1" || echo "notFound"`
          if [ "$lookup" = "notFound" ]; then docker build -t ftp src/containers/ftp; fi
          if [ "$lookup" = "notFound" ]; then docker tag ftp:latest "$image_name"; fi
          # if [ "$lookup" = "notFound" ]; then docker push "$image_name"; fi
