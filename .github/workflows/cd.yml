name: Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - lib/**
      - src/**
      - test/**
      - state-machine.asl.yml
      - template.yml

concurrency:
  group: ${{ github.workflow }}

jobs:
  lint-cloudformation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pip
      - run: pip install -r requirements.txt
      - run: cfn-lint --ignore-checks W --template template.yml
  lint-javascript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "14"
          cache: "npm"
      - run: npm install
      - run: npm run eslint -- "**/*.js"
      - run: npm run tsc
  lint-ruby:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.6" # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - run: bundle exec rubocop

  build-sam:
    runs-on: ubuntu-latest
    needs: [lint-cloudformation, lint-javascript, lint-ruby]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: aws-actions/setup-sam@v1
      - run: sam build --parallel
      - run: zip -rq aws-sam.zip ./.aws-sam/*
      - uses: actions/upload-artifact@v3
        with:
          name: sam-build
          path: aws-sam.zip
          retention-days: 30
  build-ffmpeg-docker:
    runs-on: ubuntu-latest
    needs: [lint-cloudformation, lint-javascript, lint-ruby]
    strategy:
      matrix:
        account-id:
          - "561178107736"
        region:
          - us-east-1
          - us-west-2
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ matrix.region }}
          role-to-assume: arn:aws:iam::${{ matrix.account-id }}:role/DevOps-GitHubOidcFederatedRole
          role-session-name: GitHub_Workflow-Deploy_Porter
      - run: aws ecr get-login-password --region ${{ matrix.region }} | docker login --username AWS --password-stdin ${{ matrix.account-id }}.dkr.ecr.${{ matrix.region }}.amazonaws.com
  build-ftp-docker:
    runs-on: ubuntu-latest
    needs: [lint-cloudformation, lint-javascript, lint-ruby]
    strategy:
      matrix:
        account-id:
          - "561178107736"
        region:
          - us-east-1
          - us-west-2
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ matrix.region }}
          role-to-assume: arn:aws:iam::${{ matrix.account }}:role/DevOps-GitHubOidcFederatedRole
          role-session-name: GitHub_Workflow-Deploy_Porter
      - run: aws ecr get-login-password --region ${{ matrix.region }} | docker login --username AWS --password-stdin ${{ matrix.account-id }}.dkr.ecr.${{ matrix.region }}.amazonaws.com

  staging-deploy:
    runs-on: ubuntu-latest
    needs: [build-sam, build-ffmpeg-docker, build-ftp-docker]
    # environment:
    #   name: Staging
    strategy:
      matrix:
        region:
          - us-east-1
          - us-west-2
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: sam-build
      - run: unzip -q aws-sam.zip
      - run: echo "sam deploy --to-staging"

  acceptance-test:
    runs-on: ubuntu-latest
    needs: staging-deploy
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        include:
          - region: us-east-1
            stack-name: porter-staging
            account-id: "561178107736"
            test-bucket: prx-porter-sandbox
          - region: us-west-2
            stack-name: porter-staging
            account-id: "561178107736"
            test-bucket: prx-porter-sandbox-us-west-2
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.6"
          bundler-cache: true
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ matrix.region }}
          role-to-assume: arn:aws:iam::${{ matrix.account-id }}:role/DevOps-GitHubOidcFederatedRole
          role-session-name: GitHub_Workflow-Deploy_Porter
      - run: |
          export PORTER_TEST_BUCKET_NAME=${{ matrix.test-bucket }}
          export PORTER_STATE_MACHINE_ARN=$(aws cloudformation describe-stacks --region ${{ matrix.region }} --stack-name ${{ matrix.stack-name }} --query "Stacks[0].Outputs[?OutputKey=='StateMachineArn'].OutputValue" --output text)
          # bundle exec rake test

  production-deploy:
    runs-on: ubuntu-latest
    needs: acceptance-test
    # environment:
    #   name: Production
    strategy:
      matrix:
        region:
          - us-east-1
          - us-west-2
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: sam-build
      - run: unzip -q aws-sam.zip
      - run: echo "sam deploy --to-prod"
